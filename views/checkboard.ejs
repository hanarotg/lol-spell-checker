<html>
  <head>
    <%- include('header.ejs') %>
    <title><%= id %> - SPELL.TEAM</title>
  </head>

  <style>

    .spell_container {
      z-index: 999;
      position: absolute;
      left: 50%;
      top: 50%;
      width: 64px;
      height: 64px;
      transform: translate(-50%, -50%);
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .spell_time {
      font-weight: bold;
      font-size: 16px;
      color: #ffffff;
      margin-bottom: 0;
    }

  </style>
  
  <script>

    // 스펠 타이머 모음 객체
    let spell;

    // 플레이타임
    let playtime_minutes = 0;
    let playtime_seconds = 0;

    // 게임 플레이타임 갱신
    const updatePlaytime = function (playtime_timestamp) {
      
      const startdate = new Date(playtime_timestamp * 1000);
      const date = new Date();

      let diffdate = (date.getTime() - startdate.getTime()) / 1000;
      diffdate /= 60
            
      /*
      let playtime_minutes = diffdate.getMinutes();
      let playtime_seconds = diffdate.getSeconds();

      // 1초에 한번씩 갱신
      setInterval(() => {
        
        // 분이 바뀌는 경우
        if(playtime_seconds == 59){
          playtime_minutes += 1;
          playtime_seconds = 0;
        }
        else {
          playtime_seconds += 1;
        }

        console.log(playtime_minutes, playtime_seconds);

      }, 1000);
      */
    
    }

    // 휴지상태 스펠 타이머를 활성화합니다.
    const startSpellTimer = function (event) { 

        // 로그에 스펠 상태 업데이트 기록
        // log.value += `\n${playtime_minutes}:${playtime_seconds} - 스펠 업데이트`;

        // event를 통해 객체 접근, 선언
        let spell_container = event.currentTarget;
        let spell_time = event.currentTarget.querySelector(".spell_time");
        let spell_time_left = spell_container.spell_id;

        // 타이머 활성 디자인으로 변경
        spell_container.style.background = "rgba(0, 0, 0, .5)";
        spell_time.innerHTML = `${spell_time_left}`;
    
        // 타이머 설정
        spell = setInterval(() => {

          // 타이머 종료 시
          if (spell_time_left == 0) {
            spell_container.style.background = "rgba(0, 0, 0, 0)";
            spell_time.innerHTML = "";
            clearInterval(spell);
            return;
          }
          spell_time_left -= 1;
          spell_time.innerHTML = `${spell_time_left}`;
          
        }, 1000);

        // click 이벤트 리스너는 add 중첩이므로 이미 존재하는 click 이벤트를 제거하고 추가해야 한다.
        spell_container.removeEventListener("click", startSpellTimer);
        spell_container.addEventListener("click", stopSpellTimer);

        return;
      };

    // 진행중인 스펠 타이머를 해제합니다.
    const stopSpellTimer = function (event) {
      
      // event를 통해 객체 접근, 선언
      let spell_container = event.currentTarget;
      let spell_time = event.currentTarget.querySelector(".spell_time");
      
      // 타이머 해제
      clearInterval(spell);

      // 타이머 비활성 디자인으로 변경
      spell_container.style.background = "rgba(0, 0, 0, 0)";
      spell_time.innerHTML = "";

      // click 이벤트 리스너는 add 중첩이므로 이미 존재하는 click 이벤트를 제거하고 추가해야 한다.
      spell_container.removeEventListener("click", stopSpellTimer);
      spell_container.addEventListener("click", startSpellTimer);

      return;
    }

    window.onload = () => {
      
      // 스펠 타이밍 객체 생성
      
      
      // 각 스펠 요소에 대한 이벤트 생성
      for(let i=0; i<10; i++){
        let spell1_tmp = document.getElementById(`${i}-0-container`);
        let spell1_time_tmp = document.getElementById(`${i}-0-time`);
        // 해당 스펠 아이디 저장
        spell1_tmp.spell_id = 120;

        let spell2_tmp = document.getElementById(`${i}-1-container`);
        let spell2_time_tmp = document.getElementById(`${i}-1-time`);
        // 해당 스펠에 쿨타임 저장
        spell2_tmp.spell_time_id = 180;

        spell1_tmp.addEventListener("click", startSpellTimer);
        spell2_tmp.addEventListener("click", startSpellTimer);
      }
      
      // 플레이타임 이벤트 생성
      updatePlaytime("<%= data.gameStartTime %>");
    }
  
    
  </script>

  <body>
    
    <%- include('menu.ejs') %>
    <div class="container">
      
      <br />
      <h5><a href="/cb?id=<%- id %>"><%= id %></a> 플레이 중인 게임</h5>
      <hr />

      <div class="row">
        <% data.participants.some((data, index) => { %>
          
          <% if(index == 0 || index == 5) { %>
          <div class="col-sm-6">
            <div style="margin-bottom: 10px">
            <% if(index == 0) { %>
              <p class="text-primary">Blue 팀</p>
            <% } else { %>
              <p class="text-danger">Red 팀</p>
            <% } %>
          </div>
          <% } %> 
          
          <% if(index < 5) { %>
            <div class="row" style="background-color: #d6eaf8; margin-bottom: 10px;">
          <% } else { %>
          <div
            class="row"
            style="background-color: #fadbd8; margin-bottom: 10px;"
          >
          <% } %>

            <div class="col">
              <img src="/static/champions/<%= data.championId %>.png" style="width: 64px; height: 64px;"/>

              <% if(data.summonerName == id) { %>
              <strong><%= data.summonerName %> </strong>
              <% } else { %>
              <a href="/cb?id=<%- data.summonerName %>" target="_blank">
                <strong><%= data.summonerName %> </strong>
              </a>
              <% } %>
              <br />
            </div>
            <div class="col-auto row">
              <div
                id="<%- index %>-0"
                class="col-auto"
                style="position: relative"
              >
                <img src="/static/spells/<%- data.spell1Id %>.png" />
                <div
                  id="<%- index %>-0-container"
                  class="spell_container"
                >
                  <div
                    id="<%- index %>-0-time"
                    class="spell_time"
                  ></div>
                </div>
              </div>
              <div class="col-auto"
              style="position: relative">
                <img src="/static/spells/<%- data.spell2Id %>.png" />
                <div
                  id="<%- index %>-1-container"
                  class="spell_container"
                >
                  <div
                    id="<%- index %>-1-time"
                    class="spell_time"
                  ></div>
                </div>
              </div>
            </div>
          </div>

          <% if(index == 4 || index == 9) { %>
        </div>
        <% } %> <% }) %>
      </div>
    </div>

    <!--
    <div class="container">
      <div class="form-floating">
        <textarea class="form-control" id="log" style="height: 100px; font-size: 0.8em;" readonly>
        </textarea>
        <label for="log">로그 (ws)</label>
      </div>
    </div>
    -->

    <%- include('footer.ejs') %>
  </body>
</html>


